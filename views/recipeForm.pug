extends layout

block content
  .container.mt-5
    h1 #{recipe && recipe.id ? 'Edit' : 'Add'} Recipe
    form#recipeForm(action=recipe && recipe.id ? `/recipes/${recipe.id}?_method=PATCH` : "/recipes" method="post" onsubmit="return false;")
      .form-group
        label(for="title" class="form-label") Title
        input(type="text" class="form-control" id="title" name="title" value=recipe ? recipe.title : '')


      .form-group
        label(for="category" class="form-label") Category
        input(type="text" class="form-control" id="category" name="category" value=recipe ? recipe.category : '')

      .form-group
        label(for="popularity" class="form-label") Popularity
        input(type="number" class="form-control" id="popularity" name="popularity" value=recipe ? recipe.popularity : '')


      .form-group
        label(for="ingredients" class="form-label") Ingredients (comma separated)
        input(type="text" class="form-control" id="ingredients" name="ingredients" value=recipe && recipe.ingredients ? recipe.ingredients.join(", ") : '')


      .form-group
        label(for="steps" class="form-label") Steps (comma separated)
        input(type="text" class="form-control" id="steps" name="steps" value=recipe && recipe.steps ? recipe.steps.join(", ") : '')


      button.btn.btn-success(type="submit" onclick="submitForm()") #{recipe ? 'Update' : 'Add'}
      span &nbsp;
      button.btn.btn-primary(type="button" onclick="window.location.href='/recipes'") Back to list


  script.
    function submitForm() {
      const recipeData = {
        title: document.getElementById('title').value,
        category: document.getElementById('category').value,
        ingredients: document.getElementById('ingredients').value.split(",").map(ingredient => ingredient.trim()),
        steps: document.getElementById('steps').value.split(",").map(step => step.trim()),
        popularity: document.getElementById('popularity').value,
      };

      const url = "#{recipe ? `/recipes/${recipe.id}` : '/recipes'}";
      const method = "#{recipe ? 'PATCH' : 'POST'}";

      fetch(url, {
        method: method,
        headers: {
          'Accept': 'application/json', 
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(recipeData),
      })
      .then(response => {
        if (!response.ok) {
          // If response is not ok, parse the JSON body to get errors
          response.json().then(data => {
            const errorMessages = data.errors.map(err => err.msg).join("\n");
            alert("Validation errors:\n" + errorMessages);
          });
        } else {
          // Handle success case
          return response.json().then(data => {
            alert('Success!');
            window.location.href = "/recipes";
          });
        }
      })
      .catch(error => {
        // Handle network error
        alert("Network error or cannot connect to the server");
      });
    }
